image: node

variables:
  DOCKER_DRIVER: overlay

services:
  - docker:dind

before_script:
  - export PATH=$HOME/.yarn/bin:$PATH
  - yarn install --cache-folder .yarn-cache --no-progress --no-emoji

cache:
  paths:
    - node_modules/
    - .yarn

stages:
  - test
  - build
  - deploy

test:
  stage: test
  script:
    - yarn run test

build_package: &build_package
  stage: build
  script:
    - yarn run build

pages:
  stage: deploy
  environment: staging
  script:
    - yarn run build
  artifacts:
    paths:
      - public

build_image:
  <<: *build_package
  stage: build
  image: docker:latest
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  script:
    - docker build -t registry.gitlab.com/olyverdev/cloudinary-client .
    - docker push registry.gitlab.com/olyverdev/cloudinary-client
  only:
    - master

deploy_prod:
  type: deploy
  before_script:
  # Check for ssh-agent + rsync and install if not present
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y  )'
  - eval $(ssh-agent -s)
  # Inject the remote's private key
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  # Append keyscan output into known hosts
  - ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  environment: production
  script:
  - ssh root@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com; docker build -t cloudinary-client .; docker run cloudinary-client"
  only:
  - master